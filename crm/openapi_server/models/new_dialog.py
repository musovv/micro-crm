# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator, field_validator  # noqa: F401
from crm.openapi_server.models.customer import Customer


class NewDialog(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    Dialog - a model defined in OpenAPI
        phone_number: The client of this Dialog.
        connection_id: The connection_id of this Dialog [Optional].
        country_code: Country code of phone number.
    """
    phone_number: str = Field(alias="phone_number", default=None)
    country_code: str = Field(alias="country_code", default=None)
    connection_id: Optional[str] = Field(alias="connection_id", default=None)

    class Config:
        arbitrary_types_allowed = True

    @field_validator("phone_number")
    def check_phone_number(cls, phone_number):
        if not re.match(r"^\d{7,12}$", phone_number):
            raise ValueError("Invalid phone number")
        return phone_number

    @field_validator("country_code")
    def check_country_code(cls, country_code):
        if not re.match(r"^\+[1-9]\d{0,3}$", country_code):  # 4 digits for specific like Saint Lucia: 1 (758)
            raise ValueError("Invalid country code")
        return country_code


NewDialog.update_forward_refs()
