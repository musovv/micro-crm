# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401


class Video(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    Video - a model defined in OpenAPI

        id: The id of this Video [Optional].
        title: The title of this Video [Optional].
        storage_reference: The storage_reference of this Video [Optional].
        _date: The _date of this Video [Optional].
    """

    id: Optional[object] = Field(alias="id", default=None)
    title: Optional[object] = Field(alias="title", default=None)
    storage_reference: Optional[object] = Field(alias="storage_reference", default=None)
    date: Optional[object] = Field(alias="date", default=None)

    class Config:
        arbitrary_types_allowed = True

    @validator("title")
    def title_min_length(cls, value):
        assert len(value) >= 1
        return value

    @validator("title")
    def title_max_length(cls, value):
        assert len(value) <= 256
        return value

    @validator("storage_reference")
    def storage_reference_min_length(cls, value):
        assert len(value) >= 1
        return value

    @validator("storage_reference")
    def storage_reference_max_length(cls, value):
        assert len(value) <= 1024
        return value

Video.update_forward_refs()
