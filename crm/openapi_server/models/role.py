# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401


class Role(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    Role - a model defined in OpenAPI

        id: The id of this Role [Optional].
        name: The name of this Role.
        permissions: The permissions of this Role [Optional].
    """

    id: Optional[object] = Field(alias="id", default=None)
    name: object = Field(alias="name")
    permissions: Optional[object] = Field(alias="permissions", default=None)

    class Config:
        arbitrary_types_allowed = True

    @validator("name")
    def name_min_length(cls, value):
        assert len(value) >= 1
        return value

    @validator("name")
    def name_max_length(cls, value):
        assert len(value) <= 64
        return value

Role.update_forward_refs()
