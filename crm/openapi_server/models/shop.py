# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401


class Shop(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    Shop - a model defined in OpenAPI

        id: The id of this Shop [Optional].
        name: The name of this Shop.
        connection_id: The connection_id of this Shop.
        catalog_id: The catalog_id of this Shop.
    """

    id: Optional[object] = Field(alias="id", default=None)
    name: object = Field(alias="name")
    connection_id: object = Field(alias="connection_id")
    catalog_id: object = Field(alias="catalog_id")

    class Config:
        arbitrary_types_allowed = True

    @validator("name")
    def name_min_length(cls, value):
        assert len(value) >= 3
        return value

    @validator("name")
    def name_max_length(cls, value):
        assert len(value) <= 32
        return value

Shop.update_forward_refs()
