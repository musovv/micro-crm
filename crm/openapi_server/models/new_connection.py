# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from enum import Enum
from typing import Any, Dict, List, Optional, Literal  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from crm.openapi_server.models.connection_type import ConnectionType


class NewConnection(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    NewConnection - a model defined in OpenAPI

        id: The id of this NewConnection [Optional].
        name: The name of this NewConnection [Optional].
        connection_type: The type_connection of this NewConnection.
        phone_number: The phone_number of this NewConnection.
        token: The token of this NewConnection.
    """

    id: Optional[object] = Field(alias="id", default=None)
    name: Optional[object] = Field(alias="name", default=None)
    connection_type: ConnectionType = Field(alias="connection_type")
    phone_number: object = Field(alias="phone_number")
    token: object = Field(alias="token")

    class Config:
        arbitrary_types_allowed = True

    @validator("name")
    def name_min_length(cls, value):
        assert len(value) >= 1
        return value

    @validator("name")
    def name_max_length(cls, value):
        assert len(value) <= 32
        return value

    @validator("phone_number")
    def phone_number_min_length(cls, value):
        assert len(value) >= 1
        return value

    @validator("phone_number")
    def phone_number_max_length(cls, value):
        assert len(value) <= 16
        return value

    @validator("token")
    def token_min_length(cls, value):
        assert len(value) >= 1
        return value

    @validator("token")
    def token_max_length(cls, value):
        assert len(value) <= 256
        return value

NewConnection.update_forward_refs()
