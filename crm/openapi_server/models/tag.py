# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator, field_validator  # noqa: F401


class Tag(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    Tag - a model defined in OpenAPI

        id: The id of this Tag [Optional].
        name: The name of this Tag.
        describe: The describe of this Tag [Optional].
        color: The color of this Tag.
    """

    id: Optional[object] = Field(alias="id", default=None)
    name: object = Field(alias="name")
    description: Optional[object] = Field(alias="description", default=None)
    color: object = Field(alias="color")

    class Config:
        arbitrary_types_allowed = True

    @field_validator("name")
    def name_max_length(cls, value):
        assert len(value) <= 64
        return value

    @field_validator("color")
    def color_min_length(cls, value):
        assert len(value) >= 7
        return value

    @field_validator("color")
    def color_max_length(cls, value):
        assert len(value) <= 7
        return value

Tag.update_forward_refs()
