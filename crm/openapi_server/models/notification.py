# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401


class Notification(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    Notification - a model defined in OpenAPI

        id: The id of this Notification [Optional].
        setting_id: The setting_id of this Notification.
        phone_number: The phone_number of this Notification.
        notify_trouble_integrations: The notify_trouble_integrations of this Notification.
        notify_payments: The notify_payments of this Notification.
        notify_newsletter: The notify_newsletter of this Notification.
    """

    id: Optional[object] = Field(alias="id", default=None)
    setting_id: object = Field(alias="setting_id")
    phone_number: object = Field(alias="phone_number")
    notify_trouble_integrations: object = Field(alias="notify_trouble_integrations", default=None)
    notify_payments: object = Field(alias="notify_payments", default=None)
    notify_newsletters: object = Field(alias="notify_newsletters", default=None)

    class Config:
        arbitrary_types_allowed = True

    @validator("phone_number")
    def phone_number_max(cls, value):
        assert value <= 999999999999999
        return value

    @validator("phone_number")
    def phone_number_min(cls, value):
        assert value >= 10000
        return value

Notification.update_forward_refs()
