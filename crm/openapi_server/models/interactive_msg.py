# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from crm.openapi_server.models.document import Document
from crm.openapi_server.models.image import Image
from crm.openapi_server.models.type_interactive_msg import TypeInteractiveMsg
from crm.openapi_server.models.video import Video


class InteractiveMsg(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    InteractiveMsg - a model defined in OpenAPI

        id: The id of this InteractiveMsg [Optional].
        title: The title of this InteractiveMsg [Optional].
        text: The text of this InteractiveMsg [Optional].
        footer: The footer of this InteractiveMsg [Optional].
        type_msg: The type_msg of this InteractiveMsg.
        document: The document of this InteractiveMsg [Optional].
        photo: The photo of this InteractiveMsg [Optional].
        video: The video of this InteractiveMsg [Optional].
    """

    id: Optional[object] = Field(alias="id", default=None)
    title: Optional[object] = Field(alias="title", default=None)
    text: Optional[object] = Field(alias="text", default=None)
    footer: Optional[object] = Field(alias="footer", default=None)
    type_msg: TypeInteractiveMsg = Field(alias="type_msg")
    document: Optional[Document] = Field(alias="document", default=None)
    photo: Optional[Image] = Field(alias="photo", default=None)
    video: Optional[Video] = Field(alias="video", default=None)

    class Config:
        arbitrary_types_allowed = True

    @validator("title")
    def title_min_length(cls, value):
        assert len(value) >= 1
        return value

    @validator("title")
    def title_max_length(cls, value):
        assert len(value) <= 128
        return value

    @validator("text")
    def text_min_length(cls, value):
        assert len(value) >= 1
        return value

    @validator("text")
    def text_max_length(cls, value):
        assert len(value) <= 1024
        return value

    @validator("footer")
    def footer_min_length(cls, value):
        assert len(value) >= 1
        return value

    @validator("footer")
    def footer_max_length(cls, value):
        assert len(value) <= 64
        return value

InteractiveMsg.update_forward_refs()
